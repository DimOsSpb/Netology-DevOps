[0m[1mdata.template_file.metadata: Reading...[0m[0m
[0m[1mdata.template_file.metadata: Read complete after 0s [id=e29077f3afdfd9a900a80f4434d788a45af29af8406df4ff2dd5da66999f5971][0m
[0m[1mdata.yandex_compute_image.ubuntu: Reading...[0m[0m
[0m[1mmodule.vpc.yandex_vpc_subnet.this: Refreshing state... [id=e9bhhs7b3ta66joc11b5][0m
[0m[1mmodule.vpc.yandex_vpc_network.this: Refreshing state... [id=enplukq57f419hophos3][0m
[0m[1mdata.yandex_compute_image.ubuntu: Read complete after 0s [id=fd8383qtki9fpldbhtmd][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [31m-[0m destroy[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.vm-analytics.data.yandex_compute_image.my_image[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "yandex_compute_image" "my_image" {
      [32m+[0m[0m created_at          = (known after apply)
      [32m+[0m[0m description         = (known after apply)
      [32m+[0m[0m family              = "ubuntu-2404-lts"
      [32m+[0m[0m folder_id           = (known after apply)
      [32m+[0m[0m hardware_generation = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m image_id            = (known after apply)
      [32m+[0m[0m kms_key_id          = (known after apply)
      [32m+[0m[0m labels              = (known after apply)
      [32m+[0m[0m min_disk_size       = (known after apply)
      [32m+[0m[0m name                = (known after apply)
      [32m+[0m[0m os_type             = (known after apply)
      [32m+[0m[0m pooled              = (known after apply)
      [32m+[0m[0m product_ids         = (known after apply)
      [32m+[0m[0m size                = (known after apply)
      [32m+[0m[0m status              = (known after apply)
    }

[1m  # module.vm-analytics.yandex_compute_instance.vm[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m description               = "TODO: description; {{terraform yyy managed}}"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hardware_generation       = (known after apply)
      [32m+[0m[0m hostname                  = "prod-analytics-0"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = {
          [32m+[0m[0m "project" = "analytics"
        }
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                users:
                  - name: ubuntu
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDffPBZFrnDjeZInRI4J5VIP0WoiJOMx1vfGkSRwVcjy dimosspb@vk.ru
                
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    groups: sudo
                    shell: /bin/bash
                
                package_update: true
                package_upgrade: true
                packages: ["nginx"]
            EOT
        }
      [32m+[0m[0m name                      = "prod-analytics-0"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = (known after apply)
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 1
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # module.vm-marketing.data.yandex_compute_image.my_image[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "yandex_compute_image" "my_image" {
      [32m+[0m[0m created_at          = (known after apply)
      [32m+[0m[0m description         = (known after apply)
      [32m+[0m[0m family              = "ubuntu-2404-lts"
      [32m+[0m[0m folder_id           = (known after apply)
      [32m+[0m[0m hardware_generation = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m image_id            = (known after apply)
      [32m+[0m[0m kms_key_id          = (known after apply)
      [32m+[0m[0m labels              = (known after apply)
      [32m+[0m[0m min_disk_size       = (known after apply)
      [32m+[0m[0m name                = (known after apply)
      [32m+[0m[0m os_type             = (known after apply)
      [32m+[0m[0m pooled              = (known after apply)
      [32m+[0m[0m product_ids         = (known after apply)
      [32m+[0m[0m size                = (known after apply)
      [32m+[0m[0m status              = (known after apply)
    }

[1m  # module.vm-marketing.yandex_compute_instance.vm[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m description               = "TODO: description; {{terraform yyy managed}}"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hardware_generation       = (known after apply)
      [32m+[0m[0m hostname                  = "prod-marketing-0"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = {
          [32m+[0m[0m "project" = "marketing"
        }
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                users:
                  - name: ubuntu
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDffPBZFrnDjeZInRI4J5VIP0WoiJOMx1vfGkSRwVcjy dimosspb@vk.ru
                
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    groups: sudo
                    shell: /bin/bash
                
                package_update: true
                package_upgrade: true
                packages: ["nginx"]
            EOT
        }
      [32m+[0m[0m name                      = "prod-marketing-0"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = (known after apply)
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = (known after apply)
        }

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 1
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # module.vpc.yandex_vpc_network.this[0m will be [1m[31mdestroyed[0m
  # (because yandex_vpc_network.this is not in configuration)
[0m  [31m-[0m[0m resource "yandex_vpc_network" "this" {
      [31m-[0m[0m created_at                = "2025-08-05T11:50:54Z" [90m-> null[0m[0m
      [31m-[0m[0m default_security_group_id = "enp9m4q31n5kbu67mrtq" [90m-> null[0m[0m
      [31m-[0m[0m folder_id                 = "b1gg3ad99mhgfm5qo1tt" [90m-> null[0m[0m
      [31m-[0m[0m id                        = "enplukq57f419hophos3" [90m-> null[0m[0m
      [31m-[0m[0m labels                    = {} [90m-> null[0m[0m
      [31m-[0m[0m name                      = "develop" [90m-> null[0m[0m
      [31m-[0m[0m subnet_ids                = [
          [31m-[0m[0m "e9bhhs7b3ta66joc11b5",
        ] [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.vpc.yandex_vpc_subnet.this[0m will be [1m[31mdestroyed[0m
  # (because yandex_vpc_subnet.this is not in configuration)
[0m  [31m-[0m[0m resource "yandex_vpc_subnet" "this" {
      [31m-[0m[0m created_at     = "2025-08-05T11:50:57Z" [90m-> null[0m[0m
      [31m-[0m[0m folder_id      = "b1gg3ad99mhgfm5qo1tt" [90m-> null[0m[0m
      [31m-[0m[0m id             = "e9bhhs7b3ta66joc11b5" [90m-> null[0m[0m
      [31m-[0m[0m labels         = {} [90m-> null[0m[0m
      [31m-[0m[0m name           = "develop" [90m-> null[0m[0m
      [31m-[0m[0m network_id     = "enplukq57f419hophos3" [90m-> null[0m[0m
      [31m-[0m[0m v4_cidr_blocks = [
          [31m-[0m[0m "10.0.1.0/24",
        ] [90m-> null[0m[0m
      [31m-[0m[0m v6_cidr_blocks = [] [90m-> null[0m[0m
      [31m-[0m[0m zone           = "ru-central1-a" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.vpc_dev.yandex_vpc_network.this[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "this" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "develop"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # module.vpc_dev.yandex_vpc_subnet.this["subnet-0"][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "this" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet-0"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # module.vpc_prod.yandex_vpc_network.this[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "this" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "production"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # module.vpc_prod.yandex_vpc_subnet.this["subnet-0"][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "this" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet-0"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # module.vpc_prod.yandex_vpc_subnet.this["subnet-1"][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "this" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet-1"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-b"
    }

[1m  # module.vpc_prod.yandex_vpc_subnet.this["subnet-2"][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "this" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "subnet-2"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.3.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-c"
    }

[1mPlan:[0m 8 to add, 0 to change, 2 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
